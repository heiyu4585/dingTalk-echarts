"use strict";

var _page = _interopRequireDefault(require("./page.js"));
var _config = _interopRequireDefault(require("./config"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
Page({
  data: {
    showSort: true,
    demoList: _page["default"],
    imgConfig: _config["default"],
    theme: 'light'
  },
  onLoad: function onLoad() {
    this.initImage();
    this.initTheme();
  },
  initImage: function initImage() {
    _page["default"].forEach(function (item) {
      item.cardList.forEach(function (list) {
        if (_typeof(list.id) === 'object') {
          list.img = _config["default"][list.id[0]];
        } else {
          list.img = _config["default"][list.id];
        }
      });
    });
  },
  initTheme: function initTheme() {
    var _this = this;
    if (dd.canIUse('getColorSchemeSync')) {
      this.setData({
        theme: dd.getColorSchemeSync()
      });
    }
    dd.onColorSchemeChange && dd.onColorSchemeChange(function (res) {
      _this.setData({
        theme: res.colorScheme
      });
    });
  },
  onTapDemo: function onTapDemo(e) {
    var link = e.target.dataset.link;
    my.navigateTo({
      url: link
    });
  },
  onShareAppMessage: function onShareAppMessage() {
    return {
      title: 'dingtalk-design-miniapp组件库',
      desc: 'dingtalk-design-miniapp是一套遵循钉钉设计规范的组件库，涵盖基础组件和业务组件，由钉钉官方为钉钉小程序量身设计，让用户的体验和感知统一。',
      path: '/src/demo/index/index'
    };
  }
});
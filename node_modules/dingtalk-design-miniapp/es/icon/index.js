"use strict";

var _ddiconfont = _interopRequireDefault(require("./ddiconfont"));
var _dmiconfont = _interopRequireDefault(require("./dmiconfont"));
var _custom = _interopRequireDefault(require("./custom"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
_custom["default"].add('ddesign-iconfont', _ddiconfont["default"]);
_custom["default"].add('dmiconfont', _dmiconfont["default"]);
var PRESET_SIZE = {
  small: 32,
  medium: 48,
  large: 64,
  huge: 96
};
Component({
  data: {
    $uiName: 'icon',
    iconText: '',
    //  ICON 名称 对应的文本
    iconSize: '',
    //  ICON样式：大小
    iconFont: '' //  ICON样式：字体
  },

  props: {
    className: '',
    type: '',
    size: 0,
    //  ICON大小，允许传入数字，或是 PRESET_SIZE 中预定义的尺寸
    onDmTap: function onDmTap() {},
    onTap: function onTap() {}
  },
  didMount: function didMount() {
    var _this = this;
    setTimeout(function () {
      _this.setIconSize(_this.props.size);
      _this.setIconFontAndText(_this.props.type);
    }, 0);
  },
  didUpdate: function didUpdate(prevProps) {
    var _this2 = this;
    var _this$props = this.props,
      type = _this$props.type,
      size = _this$props.size;
    if (prevProps.type !== type) {
      setTimeout(function () {
        _this2.setIconFontAndText(type);
      }, 0);
    }
    if (prevProps.size !== size) {
      setTimeout(function () {
        _this2.setIconSize(size);
      }, 0);
    }
  },
  methods: {
    setIconSize: function setIconSize(propSize) {
      var iconSize = '';
      var intSize = parseInt(propSize, 10) || 0;
      if (intSize < 1) {
        intSize = PRESET_SIZE[propSize];
      }
      iconSize = intSize ? "font-size:".concat(intSize, "rpx;") : '';
      this.setData({
        iconSize: iconSize
      });
    },
    setIconFontAndText: function setIconFontAndText(propType) {
      var _iconResource$get = _custom["default"].get(),
        type2font = _iconResource$get.type2font,
        type2text = _iconResource$get.type2text;
      if (type2font[propType] === undefined) {
        propType = 'icon_home_outlined';
      }
      var iconFont = type2font[propType];
      var iconText = type2text[propType];
      this.setData({
        iconFont: iconFont,
        iconText: iconText
      });
    },
    onDmTap: function onDmTap(e) {
      this.props.onDmTap(e, this);
      this.props.onTap(e);
    }
  }
});